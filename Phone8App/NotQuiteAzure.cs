//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 3.7.0.0
// 
namespace NotQuiteAzure
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/NotQuiteAzure")]
    public partial class Customer : object
    {
        
        private NotQuiteAzure.Policy[] PoliciesField;
        
        private string addressField;
        
        private int custNoField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailField;
        
        private string homePhoneField;
        
        private string idField;
        
        private string nameField;
        
        private string workPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NotQuiteAzure.Policy[] Policies
        {
            get
            {
                return this.PoliciesField;
            }
            set
            {
                this.PoliciesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int custNo
        {
            get
            {
                return this.custNoField;
            }
            set
            {
                this.custNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateOfBirth
        {
            get
            {
                return this.dateOfBirthField;
            }
            set
            {
                this.dateOfBirthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string homePhone
        {
            get
            {
                return this.homePhoneField;
            }
            set
            {
                this.homePhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string workPhone
        {
            get
            {
                return this.workPhoneField;
            }
            set
            {
                this.workPhoneField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Policy", Namespace="http://schemas.datacontract.org/2004/07/NotQuiteAzure")]
    public partial class Policy : object
    {
        
        private string idField;
        
        private string makeField;
        
        private string modelField;
        
        private string registrationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string make
        {
            get
            {
                return this.makeField;
            }
            set
            {
                this.makeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string model
        {
            get
            {
                return this.modelField;
            }
            set
            {
                this.modelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string registration
        {
            get
            {
                return this.registrationField;
            }
            set
            {
                this.registrationField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="INotQuiteAzure")]
public interface INotQuiteAzure
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INotQuiteAzure/Register", ReplyAction="http://tempuri.org/INotQuiteAzure/RegisterResponse")]
    System.IAsyncResult BeginRegister(string id, System.AsyncCallback callback, object asyncState);
    
    NotQuiteAzure.Customer EndRegister(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INotQuiteAzure/CallMe", ReplyAction="http://tempuri.org/INotQuiteAzure/CallMeResponse")]
    System.IAsyncResult BeginCallMe(string id, string customerPhone, System.AsyncCallback callback, object asyncState);
    
    bool EndCallMe(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INotQuiteAzure/RegisterClaim", ReplyAction="http://tempuri.org/INotQuiteAzure/RegisterClaimResponse")]
    System.IAsyncResult BeginRegisterClaim(string customerId, double longitude, double latitude, string policyNumber, System.AsyncCallback callback, object asyncState);
    
    string EndRegisterClaim(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface INotQuiteAzureChannel : INotQuiteAzure, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public NotQuiteAzure.Customer Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((NotQuiteAzure.Customer)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CallMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CallMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RegisterClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public RegisterClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class NotQuiteAzureClient : System.ServiceModel.ClientBase<INotQuiteAzure>, INotQuiteAzure
{
    
    private BeginOperationDelegate onBeginRegisterDelegate;
    
    private EndOperationDelegate onEndRegisterDelegate;
    
    private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
    
    private BeginOperationDelegate onBeginCallMeDelegate;
    
    private EndOperationDelegate onEndCallMeDelegate;
    
    private System.Threading.SendOrPostCallback onCallMeCompletedDelegate;
    
    private BeginOperationDelegate onBeginRegisterClaimDelegate;
    
    private EndOperationDelegate onEndRegisterClaimDelegate;
    
    private System.Threading.SendOrPostCallback onRegisterClaimCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public NotQuiteAzureClient()
    {
    }
    
    public NotQuiteAzureClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public NotQuiteAzureClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NotQuiteAzureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public NotQuiteAzureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
    
    public event System.EventHandler<CallMeCompletedEventArgs> CallMeCompleted;
    
    public event System.EventHandler<RegisterClaimCompletedEventArgs> RegisterClaimCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INotQuiteAzure.BeginRegister(string id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRegister(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    NotQuiteAzure.Customer INotQuiteAzure.EndRegister(System.IAsyncResult result)
    {
        return base.Channel.EndRegister(result);
    }
    
    private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string id = ((string)(inValues[0]));
        return ((INotQuiteAzure)(this)).BeginRegister(id, callback, asyncState);
    }
    
    private object[] OnEndRegister(System.IAsyncResult result)
    {
        NotQuiteAzure.Customer retVal = ((INotQuiteAzure)(this)).EndRegister(result);
        return new object[] {
                retVal};
    }
    
    private void OnRegisterCompleted(object state)
    {
        if ((this.RegisterCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void RegisterAsync(string id)
    {
        this.RegisterAsync(id, null);
    }
    
    public void RegisterAsync(string id, object userState)
    {
        if ((this.onBeginRegisterDelegate == null))
        {
            this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
        }
        if ((this.onEndRegisterDelegate == null))
        {
            this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
        }
        if ((this.onRegisterCompletedDelegate == null))
        {
            this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
        }
        base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                    id}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INotQuiteAzure.BeginCallMe(string id, string customerPhone, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCallMe(id, customerPhone, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool INotQuiteAzure.EndCallMe(System.IAsyncResult result)
    {
        return base.Channel.EndCallMe(result);
    }
    
    private System.IAsyncResult OnBeginCallMe(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string id = ((string)(inValues[0]));
        string customerPhone = ((string)(inValues[1]));
        return ((INotQuiteAzure)(this)).BeginCallMe(id, customerPhone, callback, asyncState);
    }
    
    private object[] OnEndCallMe(System.IAsyncResult result)
    {
        bool retVal = ((INotQuiteAzure)(this)).EndCallMe(result);
        return new object[] {
                retVal};
    }
    
    private void OnCallMeCompleted(object state)
    {
        if ((this.CallMeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CallMeCompleted(this, new CallMeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CallMeAsync(string id, string customerPhone)
    {
        this.CallMeAsync(id, customerPhone, null);
    }
    
    public void CallMeAsync(string id, string customerPhone, object userState)
    {
        if ((this.onBeginCallMeDelegate == null))
        {
            this.onBeginCallMeDelegate = new BeginOperationDelegate(this.OnBeginCallMe);
        }
        if ((this.onEndCallMeDelegate == null))
        {
            this.onEndCallMeDelegate = new EndOperationDelegate(this.OnEndCallMe);
        }
        if ((this.onCallMeCompletedDelegate == null))
        {
            this.onCallMeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallMeCompleted);
        }
        base.InvokeAsync(this.onBeginCallMeDelegate, new object[] {
                    id,
                    customerPhone}, this.onEndCallMeDelegate, this.onCallMeCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult INotQuiteAzure.BeginRegisterClaim(string customerId, double longitude, double latitude, string policyNumber, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRegisterClaim(customerId, longitude, latitude, policyNumber, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string INotQuiteAzure.EndRegisterClaim(System.IAsyncResult result)
    {
        return base.Channel.EndRegisterClaim(result);
    }
    
    private System.IAsyncResult OnBeginRegisterClaim(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string customerId = ((string)(inValues[0]));
        double longitude = ((double)(inValues[1]));
        double latitude = ((double)(inValues[2]));
        string policyNumber = ((string)(inValues[3]));
        return ((INotQuiteAzure)(this)).BeginRegisterClaim(customerId, longitude, latitude, policyNumber, callback, asyncState);
    }
    
    private object[] OnEndRegisterClaim(System.IAsyncResult result)
    {
        string retVal = ((INotQuiteAzure)(this)).EndRegisterClaim(result);
        return new object[] {
                retVal};
    }
    
    private void OnRegisterClaimCompleted(object state)
    {
        if ((this.RegisterClaimCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RegisterClaimCompleted(this, new RegisterClaimCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void RegisterClaimAsync(string customerId, double longitude, double latitude, string policyNumber)
    {
        this.RegisterClaimAsync(customerId, longitude, latitude, policyNumber, null);
    }
    
    public void RegisterClaimAsync(string customerId, double longitude, double latitude, string policyNumber, object userState)
    {
        if ((this.onBeginRegisterClaimDelegate == null))
        {
            this.onBeginRegisterClaimDelegate = new BeginOperationDelegate(this.OnBeginRegisterClaim);
        }
        if ((this.onEndRegisterClaimDelegate == null))
        {
            this.onEndRegisterClaimDelegate = new EndOperationDelegate(this.OnEndRegisterClaim);
        }
        if ((this.onRegisterClaimCompletedDelegate == null))
        {
            this.onRegisterClaimCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterClaimCompleted);
        }
        base.InvokeAsync(this.onBeginRegisterClaimDelegate, new object[] {
                    customerId,
                    longitude,
                    latitude,
                    policyNumber}, this.onEndRegisterClaimDelegate, this.onRegisterClaimCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override INotQuiteAzure CreateChannel()
    {
        return new NotQuiteAzureClientChannel(this);
    }
    
    private class NotQuiteAzureClientChannel : ChannelBase<INotQuiteAzure>, INotQuiteAzure
    {
        
        public NotQuiteAzureClientChannel(System.ServiceModel.ClientBase<INotQuiteAzure> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginRegister(string id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
            return _result;
        }
        
        public NotQuiteAzure.Customer EndRegister(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            NotQuiteAzure.Customer _result = ((NotQuiteAzure.Customer)(base.EndInvoke("Register", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginCallMe(string id, string customerPhone, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = id;
            _args[1] = customerPhone;
            System.IAsyncResult _result = base.BeginInvoke("CallMe", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndCallMe(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("CallMe", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginRegisterClaim(string customerId, double longitude, double latitude, string policyNumber, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[4];
            _args[0] = customerId;
            _args[1] = longitude;
            _args[2] = latitude;
            _args[3] = policyNumber;
            System.IAsyncResult _result = base.BeginInvoke("RegisterClaim", _args, callback, asyncState);
            return _result;
        }
        
        public string EndRegisterClaim(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("RegisterClaim", _args, result)));
            return _result;
        }
    }
}
